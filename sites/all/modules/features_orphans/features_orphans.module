<?php

/**
 * @file
 * Module file for Features Orphans, an administration tool that lists all
 * Features-exportable components that do NOT belong to a feature module
 */

/**
 * Implements hook_menu().
 */
function features_orphans_menu() {
  $items = array();
  $items['admin/build/features/orphans'] = array(
    'title' => 'Orphans',
    'description' => 'List all exportable components that are NOT included in a feature module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('features_orphans_page_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer features'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );
  return $items;
}

/**
 * Page form Callback
 */
function features_orphans_page_form(&$form_state) {
  module_load_include('export.inc', 'features');

  $build['orphans'] = array(
    '#type' => 'vertical_tabs',
  );
  // User-selected feature source components.
  $components = features_get_components();
  ksort($components);
  unset($components['dependencies']);
// Add required JavaScript and Stylesheet.
// drupal_add_library('system', 'drupal.vertical-tabs');

  $options = array();
  foreach ($components as $component => $component_info) {
    $options[$component] = features_invoke($component, 'features_export_options');
    $options_count = count($options[$component]);
    if ($options_count) {
      $counts[$component] = array();
      $counts[$component]['total'] = $options_count;
      $counts[$component]['exported'] = 0;

      // Find all default components that are not provided by this feature and
      // strip them out of the possible options.
      if ($map = features_get_default_map($component)) {
        foreach ($map as $k => $v) {
          if (isset($options[$component][$k])) {
            unset($options[$component][$k]);
            $counts[$component]['exported']++;
          }
        }
      }

      //Count remaining components
      $counts[$component]['orphans'] = count($options[$component]);

      //Generate info strings
      $items_output = '';
      foreach ($options[$component] as $key => $option){
        $items_output .= "features[$component][] = \"$key\"\n";
      }

      $title = t('!name (!orphans orphans)', array(
        '!name' => $component_info['name'],
        '!orphans' => $counts[$component]['orphans'],
      ));

      $description = t('!exported of !total exported', array(
        '!exported' => $counts[$component]['exported'],
        '!total' => $counts[$component]['total'],
      ));
      $build[$component] = array(
        '#type' => 'fieldset',
        '#title' => $title,
        '#description' => $description,
        '#tree' => FALSE,
        '#group' => 'orphans',
      );
      $build[$component]['items'] = array(
        '#prefix' => '<pre>',
        '#value' => $items_output,
        '#suffix' => '</pre>',
      );
    }
  }

  return $build;
}

/**
 * Implements hook_enable().
 *
 * To set the vertical tabs variable.
 */
function features_orphans_enable() {
  $vertical_tabs_forms = variable_get('vertical_tabs_forms', array());
  $vertical_tabs_forms['features_orphans_page_form'] = TRUE;
  variable_set('vertical_tabs_forms', $vertical_tabs_forms);
}